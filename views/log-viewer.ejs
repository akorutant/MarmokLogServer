<div class="bg-white rounded-lg shadow-md p-4 md:p-6">
    <h1 class="text-xl md:text-2xl font-bold mb-4 text-gray-800 flex items-center">
        <i class="fas fa-file-alt mr-2 text-blue-500"></i>
        <span class="truncate"><%= title %></span>
    </h1>

    <div class="mb-4">
        <div class="bg-gray-50 rounded-lg p-2 flex justify-between items-center">
            <div class="text-sm">
                <span class="mr-4 hidden md:inline"><i class="fas fa-info-circle text-blue-500 mr-1"></i> Log file content</span>
            </div>
            <div class="flex items-center">
                <div class="flex space-x-2 md:hidden mr-2">
                    <button id="increaseFont" class="text-gray-600 p-1 rounded hover:bg-gray-100">
                        <i class="fas fa-search-plus"></i>
                    </button>
                    <button id="decreaseFont" class="text-gray-600 p-1 rounded hover:bg-gray-100">
                        <i class="fas fa-search-minus"></i>
                    </button>
                </div>
                
                <button id="copyBtn" class="text-sm px-3 py-1 bg-gray-100 text-gray-600 rounded hover:bg-gray-200">
                    <i class="fas fa-copy mr-1"></i> <span class="hidden md:inline">Copy to clipboard</span><span class="md:hidden">Copy</span>
                </button>
            </div>
        </div>
    </div>

    <div id="logContent"
        class="bg-gray-50 rounded p-2 md:p-4 font-mono text-xs md:text-sm overflow-x-auto max-h-[60vh] md:max-h-[70vh] overflow-y-auto border border-gray-200">
        <pre><%= content %></pre>
    </div>

    <div class="mt-4 flex justify-between items-center">
        <a href="/logs" class="text-blue-500 hover:text-blue-700 flex items-center">
            <i class="fas fa-arrow-left mr-2"></i><span class="hidden md:inline">Back to list</span><span class="md:hidden">Back</span>
        </a>
        
        <div class="hidden md:block text-sm text-gray-500">
            <span id="lineCount">0</span> lines | <span id="fileSize"><%= (content.length / 1024).toFixed(2) %></span> KB
        </div>
    </div>

    <script>
        function colorizeLogContent() {
            const logContent = document.getElementById('logContent');
            const preElement = logContent.querySelector('pre');

            if (!preElement) return;

            const content = preElement.textContent;
            
            try {
                const lineCount = content.split('\n').length;
                document.getElementById('lineCount').textContent = lineCount;
                
                const colorized = content.replace(/(\{.*?\})/g, function (match) {
                    try {
                        const json = JSON.parse(match);
                        let html = '<div class="p-1 border-b border-gray-200">';

                        if (json.level) {
                            const levelClass = json.level === 'error' ? 'text-red-600 font-bold' :
                                json.level === 'warn' ? 'text-yellow-600' :
                                    json.level === 'info' ? 'text-blue-600' : '';
                            html += `<span class="${levelClass}">[${json.level.toUpperCase()}]</span> `;
                        }

                        if (json.timestamp) {
                            html += `<span class="text-purple-600">${json.timestamp}</span> `;
                        }

                        if (json.message) {
                            html += `<span>${json.message}</span>`;
                        }

                        if (json.service) {
                            html += ` <span class="text-gray-500">(${json.service})</span>`;
                        }

                        html += '</div>';
                        return html;
                    } catch (e) {
                        return match;
                    }
                });

                logContent.innerHTML = colorized;
            } catch (e) {
                console.error('Error processing log content:', e);
            }
        }

        document.getElementById('copyBtn').addEventListener('click', function () {
            const logContent = document.getElementById('logContent');
            const content = logContent.textContent || '';

            navigator.clipboard.writeText(content).then(() => {
                const btn = this;
                const originalText = btn.innerHTML;
                btn.innerHTML = '<i class="fas fa-check mr-1"></i> <span class="hidden md:inline">Copied!</span><span class="md:hidden">âœ“</span>';
                btn.classList.add('bg-green-100', 'text-green-700');
                setTimeout(() => {
                    btn.innerHTML = originalText;
                    btn.classList.remove('bg-green-100', 'text-green-700');
                }, 2000);
            });
        });

        document.addEventListener('DOMContentLoaded', function() {
            colorizeLogContent();
            
            const increaseFont = document.getElementById('increaseFont');
            const decreaseFont = document.getElementById('decreaseFont');
            const logContent = document.getElementById('logContent');
            
            if (increaseFont && decreaseFont && logContent) {
                let fontSize = parseInt(window.getComputedStyle(logContent).fontSize) || 14;
                
                increaseFont.addEventListener('click', function() {
                    fontSize = Math.min(fontSize + 2, 24); 
                    logContent.style.fontSize = fontSize + 'px';
                });
                
                decreaseFont.addEventListener('click', function() {
                    fontSize = Math.max(fontSize - 2, 10);
                    logContent.style.fontSize = fontSize + 'px';
                });
                
                logContent.addEventListener('dblclick', function() {
                    fontSize = Math.min(fontSize + 2, 24);
                    logContent.style.fontSize = fontSize + 'px';
                });
            }
            
            if (logContent) {
                let touchStartX = 0;
                let scrollLeft = 0;
                
                logContent.addEventListener('touchstart', function(e) {
                    touchStartX = e.touches[0].pageX;
                    scrollLeft = logContent.scrollLeft;
                }, { passive: true });
                
                logContent.addEventListener('touchmove', function(e) {
                    const touchX = e.touches[0].pageX;
                    const xDiff = touchStartX - touchX;
                    logContent.scrollLeft = scrollLeft + xDiff;
                }, { passive: true });
            }
        });
    </script>
</div>